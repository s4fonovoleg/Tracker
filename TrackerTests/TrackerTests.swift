import XCTest
import SnapshotTesting
@testable import Tracker

final class MockDataProvider: DataProviderProtocol {
	var delegate: DataProviderDelegate?
	
	var categories: [TrackerCategory] = [
		TrackerCategory(id: UUID(), name: "–û–±—â–µ–µ", position: 0, trackers: [
			Tracker(
				id: UUID(),
				name: "–°–ø–∞—Ç—å 8 —á–∞—Å–æ–≤",
				color: .trackerColor1,
				emoji: "üòá",
				weekDays: [.monday, .thuesday, .wednesday, .thursday,
					.friday, .saturday, .sunday],
				cachedCategory: nil
			),
			Tracker(
				id: UUID(),
				name: "–ß–∏—Å—Ç–∏—Ç—å –∑—É–±—ã",
				color: .trackerColor2,
				emoji: "üôå",
				weekDays: [.monday, .thuesday, .wednesday, .thursday,
					.friday, .saturday, .sunday],
				cachedCategory: nil
			)
		]),
		TrackerCategory(id: UUID(), name: "–í–∞–∂–Ω–æ–µ", position: 0, trackers: [
			Tracker(
				id: UUID(),
				name: "–ó–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º",
				color: .trackerColor3,
				emoji: "ü•á",
				weekDays: [.monday, .thuesday, .wednesday, .thursday,
					.friday, .saturday, .sunday],
				cachedCategory: nil
			),
			Tracker(
				id: UUID(),
				name: "–ì—É–ª—è—Ç—å –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ",
				color: .trackerColor4,
				emoji: "üèù",
				weekDays: [.monday, .thuesday, .wednesday, .thursday,
					.friday, .saturday, .sunday],
				cachedCategory: nil
			)
		])
	]
	
	var trackerRecords: [TrackerRecord] = []
	
	func setTrackerRecord(_ trackerRecord: TrackerRecord, completed: Bool) {
		
	}
	
	func pinTracker(tracker: Tracker, category: TrackerCategory) throws {
		
	}
	
	func unpinTracker(tracker: Tracker) {
		
	}
	
	func deleteTracker(_ tracker: Tracker) {
		
	}
	
	func trackerCreated(_ tracker: Tracker, in category: TrackerCategory) throws {
		
	}
	
	func editTracker(_ tracker: Tracker, in category: TrackerCategory) throws {
		
	}
}

final class TrackerTests: XCTestCase {
	func testTrackersViewController() {
		let trackersViewController = TrackersViewController()
		trackersViewController.dataProvider = MockDataProvider()
		
		let navigationController = UINavigationController(
			rootViewController: trackersViewController
		)
		let statisticsController = StatisticsViewController()
		let tabBarController = TabBarController()
		
		navigationController.tabBarItem = UITabBarItem(
			title: NSLocalizedString("trackers", comment: "–ù–∞–∑–≤–∞–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ —Å —Ç—Ä–µ–∫–µ—Ä–∞–º–∏"),
			image: UIImage(named: "TrackerTabBarItemImage"),
			selectedImage: UIImage(named: "TrackerTabBarItemSelectedImage"))
		
		statisticsController.tabBarItem = UITabBarItem(
			title: NSLocalizedString("statistics", comment: "–ù–∞–∑–≤–∞–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"),
			image: UIImage(named: "StatisticsTabBarItemImage"),
			selectedImage: UIImage(named: "StatisticsTabBarItemSelectedImage"))
		
		tabBarController.viewControllers = [
			navigationController, statisticsController
		]
		
		assertSnapshot(
			matching: navigationController,
			as: .image(traits: .init(userInterfaceStyle: .light)),
			record: false
		)
		assertSnapshot(
			matching: navigationController,
			as: .image(traits: .init(userInterfaceStyle: .dark)),
			record: false
		)
	}
}
